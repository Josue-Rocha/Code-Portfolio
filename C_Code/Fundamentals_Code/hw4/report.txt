1. 
From a user's perspective, they are presented with a menu of 6 options. Each option is numbered 1-6 and they just have to type in the number according to what they want to do/see. If they enter an invalid option, they will get the appropiate error message. For options 1-3 it will prompt the user to enter information. Option one will display the record for a year given by the user. Options 2 and 3 will display which years had at least "n" losses or wins respectivley, where "n' is provided by the user. Options 4 and 5 do not require user input and will just dipslay which years nd football has a lossing or winning record respectivley. The code for them is written in a way in which it will continue to work for years to come. Option 6 terminates the program and displays a goodbye message. 
2. 
Internally, almost all of main is inside a while loop. The two arrays are outside alongside a line which fines the size of the arrays. This is done by using the sizeof function for the wins[] array and dividing it by sizeof(int) since the array is an int array. Since both arrays are the same size, I inly need to find it once, and since the program finds the size everytime it is run, it will work for updated, (larger) data sets/arrays. The first thing inside the while loop is yhe display_options function which will display all the options available to the user. It is inside the while loop (but outside the if else if statements) so that it will print every time. After the display_options functions, the loop has a scanf statement which will intake the choice given by the user. If they input 6, there is an if statement there to catch it and break the loop. Since most of main is the while loop, this would effectivley end the program except for one printf statement at the end which is just there to print a new line. Aftewards is a series of else if statements which call on the functions for the corresponding option chosen by the user. At the end is an else statement in case the user enters a number not specified. All of the functions use for loops so that they can go through the specified arrays. All of these for loops are set limited to the size of the arrays which the program found in the begining, this is so that it will run properly and the for loop won't go for too long or too little. At the very begining of the code I defined each of my functions, so that main could recognize it. At the very bottom of the code is where I actually define the functions. As mentioned, each function uses a for loop, but they also almost all (with the exception of the year_record function) they all use an if statement to gather the informatin I want. The year_record function doesn't use an if statement because it only has to print one specific index for each array. All the other functions however have to print more than one index of at least one of the arrays.
3.
To verify that the output of the program is correct, I ran it and interacted with it as though I was the user. I tried all of the 6 options to ensure that they worked properly and compared the first three with the examples from given on the course website to ensure that the information they presented was accurate. I also tried typing in options which are aren't availble such as 7 to ensure the the appropiate error message was given. 
